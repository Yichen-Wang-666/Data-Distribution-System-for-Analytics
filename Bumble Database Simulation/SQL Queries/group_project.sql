-- MySQL Script generated by MySQL Workbench
-- Thu Aug 26 11:30:50 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Account_and_login_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Account_and_login_info` (
  `user_ID` INT NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `facebook_token` VARCHAR(45) NULL,
  `email` VARCHAR(45) NOT NULL,
  `is_active` BINARY NOT NULL,
  `is_blocked` BINARY NOT NULL,
  `created_date` DATETIME NOT NULL,
  `last_active_date` DATETIME NOT NULL,
  PRIMARY KEY (`user_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Plan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Plan` (
  `planID` INT NOT NULL,
  `plan_name` VARCHAR(45) NOT NULL,
  `monthly_price` FLOAT NOT NULL,
  `max_swipes` INT NOT NULL,
  `max_superswipes` INT NOT NULL,
  `multiple_location` BINARY NOT NULL,
  `picture_quality` INT NOT NULL,
  PRIMARY KEY (`planID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Account_has_Plan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Account_has_Plan` (
  `Account_and_login_info_user_ID` INT NOT NULL,
  `Plan_planID` INT NOT NULL,
  `date_started` DATETIME NOT NULL,
  `date_ended` DATETIME NULL,
  PRIMARY KEY (`Account_and_login_info_user_ID`, `Plan_planID`),
  INDEX `fk_Account_and_login_info_has_Plan_Plan1_idx` (`Plan_planID` ASC) VISIBLE,
  INDEX `fk_Account_and_login_info_has_Plan_Account_and_login_info_idx` (`Account_and_login_info_user_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Account_and_login_info_has_Plan_Account_and_login_info`
    FOREIGN KEY (`Account_and_login_info_user_ID`)
    REFERENCES `mydb`.`Account_and_login_info` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Account_and_login_info_has_Plan_Plan1`
    FOREIGN KEY (`Plan_planID`)
    REFERENCES `mydb`.`Plan` (`planID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`gender_orientation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`gender_orientation` (
  `idgender_orientation` INT NOT NULL,
  `sexual_orientation` VARCHAR(45) NULL,
  `gender` VARCHAR(45) NULL,
  `gender_interested_in` VARCHAR(45) NULL,
  PRIMARY KEY (`idgender_orientation`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Location` (
  `latitude_longitude` INT NOT NULL,
  `zipcode` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `state_province` VARCHAR(45) NULL,
  `country` VARCHAR(45) NULL,
  PRIMARY KEY (`latitude_longitude`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_info` (
  `user_ID` INT NOT NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `weight` FLOAT NULL,
  `height` FLOAT NULL,
  `zodiac` VARCHAR(45) NULL,
  `birthdate` DATE NULL,
  `education_level` VARCHAR(45) NULL,
  `drinking` BINARY NULL,
  `smoking` BINARY NULL,
  `kid_number` INT NULL,
  `religion` VARCHAR(45) NULL,
  `politics` VARCHAR(45) NULL,
  `instagram_token` VARCHAR(45) NULL,
  `spotify_token` VARCHAR(45) NULL,
  `user_infocol` VARCHAR(45) NULL,
  `gender_orientation_idgender_orientation` INT NOT NULL,
  `current_latitude_longitude` INT NOT NULL,
  PRIMARY KEY (`user_ID`, `gender_orientation_idgender_orientation`, `current_latitude_longitude`),
  INDEX `fk_user_info_gender_orientation1_idx` (`gender_orientation_idgender_orientation` ASC) VISIBLE,
  INDEX `fk_user_info_Location1_idx` (`current_latitude_longitude` ASC) VISIBLE,
  CONSTRAINT `fk_user_info_Account_and_login_info1`
    FOREIGN KEY (`user_ID`)
    REFERENCES `mydb`.`Account_and_login_info` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_info_gender_orientation1`
    FOREIGN KEY (`gender_orientation_idgender_orientation`)
    REFERENCES `mydb`.`gender_orientation` (`idgender_orientation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_info_Location1`
    FOREIGN KEY (`current_latitude_longitude`)
    REFERENCES `mydb`.`Location` (`latitude_longitude`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Hobby`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Hobby` (
  `idHobby` INT NOT NULL,
  `hobby_name` VARCHAR(45) NULL,
  PRIMARY KEY (`idHobby`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_info_has_Hobby`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_info_has_Hobby` (
  `user_info_user_ID` INT NOT NULL,
  `Hobby_idHobby` INT NOT NULL,
  PRIMARY KEY (`user_info_user_ID`, `Hobby_idHobby`),
  INDEX `fk_user_info_has_Hobby_Hobby1_idx` (`Hobby_idHobby` ASC) VISIBLE,
  INDEX `fk_user_info_has_Hobby_user_info1_idx` (`user_info_user_ID` ASC) VISIBLE,
  CONSTRAINT `fk_user_info_has_Hobby_user_info1`
    FOREIGN KEY (`user_info_user_ID`)
    REFERENCES `mydb`.`user_info` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_info_has_Hobby_Hobby1`
    FOREIGN KEY (`Hobby_idHobby`)
    REFERENCES `mydb`.`Hobby` (`idHobby`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Pet` (
  `idPet` INT NOT NULL,
  `pet_type` VARCHAR(45) NULL,
  PRIMARY KEY (`idPet`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_info_has_Pet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_info_has_Pet` (
  `user_info_user_ID` INT NOT NULL,
  `Pet_idPet` INT NOT NULL,
  PRIMARY KEY (`user_info_user_ID`, `Pet_idPet`),
  INDEX `fk_user_info_has_Pet_Pet1_idx` (`Pet_idPet` ASC) VISIBLE,
  INDEX `fk_user_info_has_Pet_user_info1_idx` (`user_info_user_ID` ASC) VISIBLE,
  CONSTRAINT `fk_user_info_has_Pet_user_info1`
    FOREIGN KEY (`user_info_user_ID`)
    REFERENCES `mydb`.`user_info` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_info_has_Pet_Pet1`
    FOREIGN KEY (`Pet_idPet`)
    REFERENCES `mydb`.`Pet` (`idPet`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`personal_pictures`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`personal_pictures` (
  `picture_URL` VARCHAR(45) NOT NULL,
  `date_uploaded` DATE NULL,
  `size` FLOAT NULL,
  `user_info_user_ID` INT NOT NULL,
  PRIMARY KEY (`picture_URL`, `user_info_user_ID`),
  INDEX `fk_personal_pictures_user_info1_idx` (`user_info_user_ID` ASC) VISIBLE,
  CONSTRAINT `fk_personal_pictures_user_info1`
    FOREIGN KEY (`user_info_user_ID`)
    REFERENCES `mydb`.`user_info` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Music`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Music` (
  `music_URL` VARCHAR(45) NOT NULL,
  `sung_by` VARCHAR(45) NULL,
  `time` TIME NULL,
  `date_uploaded` DATE NULL,
  `genre_category` VARCHAR(45) NULL,
  `genre_subcategory` VARCHAR(45) NULL,
  `album` VARCHAR(45) NULL,
  PRIMARY KEY (`music_URL`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_has_Music`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_has_Music` (
  `user_info_user_ID` INT NOT NULL,
  `Music_music_URL` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_info_user_ID`, `Music_music_URL`),
  INDEX `fk_user_info_has_Music_Music1_idx` (`Music_music_URL` ASC) VISIBLE,
  INDEX `fk_user_info_has_Music_user_info1_idx` (`user_info_user_ID` ASC) VISIBLE,
  CONSTRAINT `fk_user_info_has_Music_user_info1`
    FOREIGN KEY (`user_info_user_ID`)
    REFERENCES `mydb`.`user_info` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_info_has_Music_Music1`
    FOREIGN KEY (`Music_music_URL`)
    REFERENCES `mydb`.`Music` (`music_URL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Event` (
  `event_id` INT NOT NULL,
  `event_name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `date` DATE NULL,
  `time` TIME NULL,
  `event_type` VARCHAR(45) NULL,
  `online_or_in_person` BINARY NULL,
  `Location_latitude_longitude` INT NOT NULL,
  PRIMARY KEY (`event_id`, `Location_latitude_longitude`),
  INDEX `fk_Event_Location1_idx` (`Location_latitude_longitude` ASC) VISIBLE,
  CONSTRAINT `fk_Event_Location1`
    FOREIGN KEY (`Location_latitude_longitude`)
    REFERENCES `mydb`.`Location` (`latitude_longitude`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_info_has_Event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_info_has_Event` (
  `user_info_user_ID` INT NOT NULL,
  `Event_event_id` INT NOT NULL,
  PRIMARY KEY (`user_info_user_ID`, `Event_event_id`),
  INDEX `fk_user_info_has_Event_Event1_idx` (`Event_event_id` ASC) VISIBLE,
  INDEX `fk_user_info_has_Event_user_info1_idx` (`user_info_user_ID` ASC) VISIBLE,
  CONSTRAINT `fk_user_info_has_Event_user_info1`
    FOREIGN KEY (`user_info_user_ID`)
    REFERENCES `mydb`.`user_info` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_info_has_Event_Event1`
    FOREIGN KEY (`Event_event_id`)
    REFERENCES `mydb`.`Event` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Event_has_gender_orientation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Event_has_gender_orientation` (
  `Event_event_id` INT NOT NULL,
  `gender_orientation_idgender_orientation` INT NOT NULL,
  PRIMARY KEY (`Event_event_id`, `gender_orientation_idgender_orientation`),
  INDEX `fk_Event_has_gender_orientation_gender_orientation1_idx` (`gender_orientation_idgender_orientation` ASC) VISIBLE,
  INDEX `fk_Event_has_gender_orientation_Event1_idx` (`Event_event_id` ASC) VISIBLE,
  CONSTRAINT `fk_Event_has_gender_orientation_Event1`
    FOREIGN KEY (`Event_event_id`)
    REFERENCES `mydb`.`Event` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_has_gender_orientation_gender_orientation1`
    FOREIGN KEY (`gender_orientation_idgender_orientation`)
    REFERENCES `mydb`.`gender_orientation` (`idgender_orientation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`User_has_seen`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User_has_seen` (
  `user_ID1` INT NOT NULL,
  `user_ID2` INT NOT NULL,
  `user_ID1_action` VARCHAR(45) NULL,
  `date_seen` DATE NULL,
  PRIMARY KEY (`user_ID1`, `user_ID2`),
  INDEX `fk_Combinations_user_info2_idx` (`user_ID2` ASC) VISIBLE,
  CONSTRAINT `fk_Combinations_user_info1`
    FOREIGN KEY (`user_ID1`)
    REFERENCES `mydb`.`user_info` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Combinations_user_info2`
    FOREIGN KEY (`user_ID2`)
    REFERENCES `mydb`.`user_info` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_info_has_Location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_info_has_Location` (
  `user_info_user_ID` INT NOT NULL,
  `Location_latitude_longitude` INT NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`user_info_user_ID`, `Location_latitude_longitude`),
  INDEX `fk_user_info_has_Location_Location1_idx` (`Location_latitude_longitude` ASC) VISIBLE,
  INDEX `fk_user_info_has_Location_user_info1_idx` (`user_info_user_ID` ASC) VISIBLE,
  CONSTRAINT `fk_user_info_has_Location_user_info1`
    FOREIGN KEY (`user_info_user_ID`)
    REFERENCES `mydb`.`user_info` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_info_has_Location_Location1`
    FOREIGN KEY (`Location_latitude_longitude`)
    REFERENCES `mydb`.`Location` (`latitude_longitude`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `mydb`.`Account_and_login_info`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Account_and_login_info` (`user_ID`, `password`, `facebook_token`, `email`, `is_active`, `is_blocked`, `created_date`, `last_active_date`) VALUES (1, DEFAULT, NULL, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT);
INSERT INTO `mydb`.`Account_and_login_info` (`user_ID`, `password`, `facebook_token`, `email`, `is_active`, `is_blocked`, `created_date`, `last_active_date`) VALUES (2, DEFAULT, NULL, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT);
INSERT INTO `mydb`.`Account_and_login_info` (`user_ID`, `password`, `facebook_token`, `email`, `is_active`, `is_blocked`, `created_date`, `last_active_date`) VALUES (3, DEFAULT, NULL, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`gender_orientation`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`gender_orientation` (`idgender_orientation`, `sexual_orientation`, `gender`, `gender_interested_in`) VALUES (1, NULL, NULL, NULL);
INSERT INTO `mydb`.`gender_orientation` (`idgender_orientation`, `sexual_orientation`, `gender`, `gender_interested_in`) VALUES (2, NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Location`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Location` (`latitude_longitude`, `zipcode`, `city`, `state_province`, `country`) VALUES (1, NULL, NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`user_info`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`user_info` (`user_ID`, `first_name`, `last_name`, `weight`, `height`, `zodiac`, `birthdate`, `education_level`, `drinking`, `smoking`, `kid_number`, `religion`, `politics`, `instagram_token`, `spotify_token`, `user_infocol`, `gender_orientation_idgender_orientation`, `current_latitude_longitude`) VALUES (1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1);
INSERT INTO `mydb`.`user_info` (`user_ID`, `first_name`, `last_name`, `weight`, `height`, `zodiac`, `birthdate`, `education_level`, `drinking`, `smoking`, `kid_number`, `religion`, `politics`, `instagram_token`, `spotify_token`, `user_infocol`, `gender_orientation_idgender_orientation`, `current_latitude_longitude`) VALUES (2, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 1);
INSERT INTO `mydb`.`user_info` (`user_ID`, `first_name`, `last_name`, `weight`, `height`, `zodiac`, `birthdate`, `education_level`, `drinking`, `smoking`, `kid_number`, `religion`, `politics`, `instagram_token`, `spotify_token`, `user_infocol`, `gender_orientation_idgender_orientation`, `current_latitude_longitude`) VALUES (3, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`User_has_seen`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`User_has_seen` (`user_ID1`, `user_ID2`, `user_ID1_action`, `date_seen`) VALUES (1, 2, 'right', '2021-08-25');
INSERT INTO `mydb`.`User_has_seen` (`user_ID1`, `user_ID2`, `user_ID1_action`, `date_seen`) VALUES (2, 1, 'right', '2021-08-25');
INSERT INTO `mydb`.`User_has_seen` (`user_ID1`, `user_ID2`, `user_ID1_action`, `date_seen`) VALUES (2, 3, 'right', '2021-08-24');
INSERT INTO `mydb`.`User_has_seen` (`user_ID1`, `user_ID2`, `user_ID1_action`, `date_seen`) VALUES (3, 2, 'left', '2021-08-25');

COMMIT;

